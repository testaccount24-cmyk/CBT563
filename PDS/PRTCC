       IDENTIFICATION DIVISION.

       PROGRAM-ID.    PRTCC.

       AUTHOR. R THORNTON

      *REMARKS*********************************************************
      * PRTCC CONTRASTS PRINTING USING SIMPLE WRITE AS COMPARED TO    *
      * USING WRITE AFTER ADVANCING STATEMENTS FOR PRINTER CARRIAGE   *
      * CONTROL:                                                      *
      *   WHEN USING SIMPLE WRITE STATEMENTS:                         *
      *     . THE COMPILER PARM "ADV" HAS NO EFFECT.                  *
      *     . THE PRINT RECORD IS DEFINED TO CONTAIN THE CARRIAGE     *
      *       CONTROL BYTE IN THE FIRST POSITION OF THE RECORD.       *
      *     . BEFORE WRITING, THE PROGRAM MUST PUT THE PROPER         *
      *       VALUE IN THE CARRIAGE CONTROL BYTE OF THE RECORD TO     *
      *       BE WRITTEN: 1=SKIP TO CHANNEL 1, 2=SKIP TO CHANNEL 2,   *
      *       +=NO SPACE, BLANK=SINGLE SPACE, 0=DOUBLE SPACE,         *
      *       -=TRIPLE SPACE, ETC.                                    *
      *     . NOTE THAT ONLY A SINGLE PRINT ROUTINE IS NEEDED FOR     *
      *       THIS, SINCE THE CARRIAGE CONTROL BYTE IS SET BY THE     *
      *       PROGRAM, RATHER THAN BY THE WRITE STATEMENT.            *
      *   WHEN USING THE WRITE AFTER ADVANCING STATEMENTS:            *
      *     . THE COMPILER PARM "ADV" CONTROLS WHETHER OR NOT THE     *
      *       PROGRAM DEFINES THE FIRST BYTE OF THE RECORD TO         *
      *       CONTAIN THE CARRIAGE CONTROL BYTE OR NOT.               *
      *     . THE SPECIAL-NAMES PARAGRAPH OF THE CONFIGURATION SECTION*
      *       MUST BE USED TO DEFINE NAMES FOR THE CHANNEL SKIPS TO BE*
      *       USED, AND ALSO FOR SUPPRESSED SKIPPING IF THESE ARE TO  *
      *       BE USED.                                                *
      *     . THE PRINT RECORD IS DEFINED WITH OR WITHOUT THE         *
      *       CARRIAGE CONTROL BYTE DEPENDING ON HOW THE "ADV"        *
      *       COBOL COMPILE PARM IS SET, BUT THIS BYTE IS NOT         *
      *       USED BY THE PROGRAM.                                    *
      *     . THE PROGRAM REQUIRES A SEPARATE WRITE AFTER ADVANCING   *
      *       STATEMENT FOR EACH DIFFERENT LINE SPACING TO BE USED    *
      *       (ONE FOR WRITE AFTER ADVANCING 1 LINE, ANOTHER FOR      *
      *       WRITE AFTER ADVANCING 2 LINES, ETC).                    *
      *     . THE CARRIAGE CONTROL BYTE IS SET IN THE FIRST BYTE OF   *
      *       THE PRINT RECORD BY THE WRITE AFTER ADVANCING           *
      *       STATEMENT.                                              *
      * THE LAST LINE WRITTEN TO EACH FILE IS A TRAILER RECORD THAT   *
      * IS CONTAINS DIFFERENT CARRIAGE CONTROL VALUES DELIBERATELY.   *
      * THE TWO PRINT FILES SHOULD BE IDENTICAL EXCEPT FOR THE FINAL  *
      * RECORD.                                                       *
      *****************************************************************
       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.

       SPECIAL-NAMES.
           C09 IS CHANNEL-9,
           CSP IS NO-SPACE,
           C01 IS HEAD-OF-FORM.

       INPUT-OUTPUT SECTION.

       FILE-CONTROL.
           SELECT INPUT-FILE ASSIGN TO INPUT1.
           SELECT ADVANCING-FILE ASSIGN TO ADVNCING.
           SELECT NOADVANCING-FILE ASSIGN TO NOADVANC.

       DATA DIVISION.

       FILE SECTION.

       FD  INPUT-FILE
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 80 CHARACTERS
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD.
       01  INPUT-RECORD            PIC X(80).                                 10

       FD  ADVANCING-FILE
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 133 CHARACTERS
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD.
       01  PRINT-RECORD-ADV.                                                  10
           05  FILLER                PIC X.                                   20
           05  PRT-DATA-ADV          PIC X(80).                               20
           05  FILLER                PIC X(52).                               30

       FD  NOADVANCING-FILE
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 133 CHARACTERS
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD.
       01  PRINT-RECORD-NOADV.                                                10
           05  PRTCC-NOADV           PIC X.                                   20
           05  PRT-DATA-NOADV        PIC X(80).                               20
           05  FILLER                PIC X(52).                               30

       WORKING-STORAGE SECTION.
       77  FILLER PIC X(36)  VALUE
           'PRTCC WORKING STORAGE BEGINS HERE'.

       01  SWITCHES.
           05  EOF-INPUT1             PIC X VALUE 'N'.
               88  MORE-INPUT1-DATA         VALUE 'N'.
               88  NO-MORE-INPUT1-DATA      VALUE 'Y'.
           05  NEXT-PRINT-ACTION      PIC X VALUE '1'.
               88  NEW-PAGE                 VALUE '1'.
               88  GO-CHANNEL-9             VALUE '9'.
               88  NO-SPACE-PRINT           VALUE '+'.
               88  WRITE-SINGLE-SPACED      VALUE ' '.
               88  WRITE-DOUBLE-SPACED      VALUE '0'.
               88  WRITE-TRIPLE-SPACED      VALUE '-'.

       01  FINAL-RECORDS.
           05  FINAL-ADV-RECORD       PIC X(133) VALUE
           ' FINAL ADVANCING RECORD: CARRIAGE CONTROL IS 1.'.
           05  FINAL-NOADV-RECORD     PIC X(133) VALUE
           '-FINAL NO-ADVANCING RECORD: CARRIAGE CONTROL IS -.'.

       PROCEDURE DIVISION.

       A100-EXECUTIVE-CONTROL.
           OPEN INPUT INPUT-FILE,
                OUTPUT ADVANCING-FILE, NOADVANCING-FILE.
           PERFORM B100-MAINLINE-PROCESSING UNTIL NO-MORE-INPUT1-DATA.
           MOVE FINAL-ADV-RECORD TO PRINT-RECORD-ADV.
           PERFORM F100-WRITE-ADV-NEW-PAGE.
           MOVE FINAL-NOADV-RECORD TO PRINT-RECORD-NOADV.
           PERFORM E100-WRITE-NOADVANCING.
           PERFORM Z100-END-OF-PROCESSING.
           GOBACK.

       B100-MAINLINE-PROCESSING.
           PERFORM C100-READ-INPUT-FILE.
           IF MORE-INPUT1-DATA
              PERFORM D100-PROCESS-THE-RECORD.

       C100-READ-INPUT-FILE.
           READ INPUT-FILE
               AT END MOVE 'Y' TO EOF-INPUT1.

       D100-PROCESS-THE-RECORD.
           MOVE SPACES TO PRINT-RECORD-ADV.
           MOVE INPUT-RECORD TO PRT-DATA-ADV.
           MOVE SPACES TO PRINT-RECORD-NOADV.
           MOVE INPUT-RECORD TO PRT-DATA-NOADV.
           MOVE NEXT-PRINT-ACTION TO PRTCC-NOADV.
           PERFORM E100-WRITE-NOADVANCING.
           IF NEW-PAGE
               PERFORM F100-WRITE-ADV-NEW-PAGE
               MOVE '9' TO NEXT-PRINT-ACTION
           ELSE IF GO-CHANNEL-9
               PERFORM G100-WRITE-ADV-CHANNEL-9
               MOVE '+' TO NEXT-PRINT-ACTION
           ELSE IF NO-SPACE-PRINT
               PERFORM H100-WRITE-ADV-NOSPACE
               MOVE ' ' TO NEXT-PRINT-ACTION
           ELSE IF WRITE-SINGLE-SPACED
               PERFORM J100-WRITE-ADV-SPACE1
               MOVE '0' TO NEXT-PRINT-ACTION
           ELSE IF WRITE-DOUBLE-SPACED
               PERFORM K100-WRITE-ADV-SPACE2
               MOVE '-' TO NEXT-PRINT-ACTION
           ELSE IF WRITE-TRIPLE-SPACED
               PERFORM L100-WRITE-ADV-SPACE3
               MOVE '1' TO NEXT-PRINT-ACTION.

       E100-WRITE-NOADVANCING.
               WRITE PRINT-RECORD-NOADV.

       F100-WRITE-ADV-NEW-PAGE.
               WRITE PRINT-RECORD-ADV AFTER ADVANCING HEAD-OF-FORM.

       G100-WRITE-ADV-CHANNEL-9.
               WRITE PRINT-RECORD-ADV AFTER ADVANCING CHANNEL-9.

       H100-WRITE-ADV-NOSPACE.
               WRITE PRINT-RECORD-ADV AFTER ADVANCING NO-SPACE.

       J100-WRITE-ADV-SPACE1.
               WRITE PRINT-RECORD-ADV AFTER ADVANCING 1 LINE.

       K100-WRITE-ADV-SPACE2.
               WRITE PRINT-RECORD-ADV AFTER ADVANCING 2 LINES.

       L100-WRITE-ADV-SPACE3.
               WRITE PRINT-RECORD-ADV AFTER ADVANCING 3 LINES.

       Z100-END-OF-PROCESSING.
           CLOSE INPUT-FILE,
                 ADVANCING-FILE,
                 NOADVANCING-FILE.
